NAME
    Business::ID::NOPPBB - Validate Indonesian property tax object number
    (NOP PBB)

VERSION
    version 0.02

SYNOPSIS
     use Business::ID::NOPPBB qw(validate_nop_pbb);

     my $res = validate_nop_pbb('327311000109900990');
     $res->[0] == 200 or die "Invalid NOP PBB!";

     # get structure
     use Data::Dumper;
     print Dumper $res->[2];

     # will print something like
     {
         province => 32,
         locality => 73,
         district => 110,
         village  => '001',
         block    => '099',
         object   => '0099',
         special  => 0,
         canonical => '32.73.110.001.099-0099.0',
     }

DESCRIPTION
    This module provides one function: validate_nop_pbb.

    This module has Rinci metadata.

FUNCTIONS
    None exported by default but they are exportable.

FUNCTIONS
  validate_nop_pbb(%args) -> [status, msg, result, meta]
    Validate (and parse) Indonesian property tax number (NOP PBB).

    Indonesian property tax object number, or Nomor Objek Pajak Pajak Bumi
    dan Bangunan, is a number given to a tax object (a piece of land with
    its house/building).

    NOP PBB is composed of 18 digits as follow:

     AA.BB.CCC.DDD.EEE-XXXX.Y

    AA is the province code from BPS. BB is locality (city/regency a.k.a
    kota/kabupaten) code from BPS. CCC is district (kecamatan) code from
    BPS. DDD is village (desa/kelurahan) code from BPS. EEE is block code.
    XXXX is the object number. Y is a special code (it is most likely not a
    check digit, since it is almost always has the value of 0).

    The function will return status 200 if syntax is valid and return the
    parsed information hash. Otherwise it will return 400.

    Currently the length and AA code is checked against valid province code.
    There is currently no way to check whether a specific NOP PBB actually
    exists, because you would need to query Dirjen Pajak's database for
    that.

    Arguments ('*' denotes required arguments):

    *   str* => *str*

        The input string containing number to check.

    Return value:

    Returns an enveloped result (an array). First element (status) is an
    integer containing HTTP status code (200 means OK, 4xx caller error, 5xx
    function error). Second element (msg) is a string containing error
    message, or 'OK' if status is 200. Third element (result) is optional,
    the actual result. Fourth element (meta) is called result metadata and
    is optional, a hash that contains extra information.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2012 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

